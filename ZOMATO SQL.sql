CREATE DATABASE ZOMATO1

DROP TABLE IF EXISTS SALES;

CREATE TABLE USERS
(USER_ID INT PRIMARY KEY,SIGNUP_DATE DATE);

CREATE TABLE GOLD_SIGNUP
(USER_ID INT PRIMARY KEY, GOLD_SIGNUP_DATE DATE);

CREATE TABLE SALES
(USER_ID INT, SALES_DATE DATE, PRODUCT_ID INT);

CREATE TABLE PRODUCT
(PRODUCT_ID INT, PRODUCT_NAME CHAR (2), PRICE INT);

INSERT INTO SALES(USER_ID, SALES_DATE,PRODUCT_ID)
VALUES  (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);

INSERT INTO USERS (USER_ID,SIGNUP_DATE)
VALUES(1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);

INSERT INTO gold_signup(USER_ID,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

select * from sales;
select * from product;
select * from gold_signup;
select * from users;

----WHAT IS THE TOTAL AMOUNT EACH CUSTOMER SPEN ON ZOMATO?

SELECT COUNT(S1.USER_ID) AS NO_OF_ORDER,S1.USER_ID,SUM(P1.PRICE) AS TOTAL_AMOUNT
FROM PRODUCT AS P1
INNER JOIN SALES AS S1
ON S1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY S1.USER_ID;

--HOW MANY DAYS EACH CUSTOMER VISITED ZOMATO?
SELECT USER_ID, COUNT( SALES_DATE) AS USER_VISIT_NO FROM SALES
GROUP BY USER_ID;

--WHAT WAS THE FIRST PRODUCT PURCHASE BY EACH CUSTOMER?

SELECT * FROM
(SELECT *,RANK() OVER (PARTITION BY USER_ID ORDER BY SALES_DATE) AS RANK1 FROM SALES) 
AS T WHERE RANK1=1;

---MOST PURCASED ITEM AMD HOW MANY TIMES WAS IT PURCHASE?

SELECT PRODUCT_ID, COUNT(PRODUCT_ID) AS TOTAL_NO FROM SALES
GROUP BY PRODUCT_ID
ORDER BY TOTAL_NO DESC


SELECT TOP 1 PRODUCT_ID, COUNT(PRODUCT_ID) AS TOTAL_NO FROM SALES
GROUP BY PRODUCT_ID
ORDER BY TOTAL_NO DESC

---
SELECT USER_ID,COUNT(PRODUCT_ID) AS COUNT FROM SALES WHERE PRODUCT_ID=
(SELECT TOP 1 PRODUCT_ID FROM SALES
GROUP BY PRODUCT_ID
ORDER BY COUNT(PRODUCT_ID) DESC)
GROUP BY USER_ID

--WICH ITEM WAS THE MOST POPULAR FOR EACH CUSTOMER?

SELECT * FROM
(SELECT *, RANK() OVER (PARTITION BY USER_ID ORDER BY POPULAR_MOST DESC) AS RANK2 FROM
(SELECT USER_ID, PRODUCT_ID, COUNT(PRODUCT_ID) AS POPULAR_MOST FROM SALES
GROUP BY USER_ID, PRODUCT_ID) AS T) AS B
WHERE RANK2 = 1

---AGAIN

SELECT * FROM(
SELECT *, RANK() OVER (PARTITION BY USER_ID ORDER BY MOST_POPULAR DESC) AS RANK1 FROM
(SELECT USER_ID, PRODUCT_ID, COUNT(PRODUCT_ID) AS MOST_POPULAR FROM SALES
GROUP BY USER_ID,PRODUCT_ID) AS T) AS B
WHERE RANK1 =1


--WHICH ITEM WAS PURCHASED FIRST BY THE CUSTOMER AFTER THEY BECAME A MEMBER?

SELECT * FROM(
SELECT * , RANK() OVER (PARTITION BY USER_ID ORDER BY SALES_DATE) AS RANK3 FROM(
SELECT G1.USER_ID, SALES_DATE,gold_signup_date, PRODUCT_ID FROM GOLD_SIGNUP AS G1
INNER JOIN SALES AS S1
ON S1.USER_ID =G1.USER_ID
WHERE SALES_DATE > gold_signup_date) AS B) AS M
WHERE RANK3 =1

---WHICH ITEM WAS PURCHASED JUST BEFORE THE CUSTOMER BECAME A GOLD MEMBER?


SELECT * FROM(
SELECT * , RANK() OVER (PARTITION BY USER_ID ORDER BY SALES_DATE DESC) AS RANK3 FROM(
SELECT G1.USER_ID, SALES_DATE,gold_signup_date, PRODUCT_ID FROM GOLD_SIGNUP AS G1
INNER JOIN SALES AS S1
ON S1.USER_ID =G1.USER_ID
WHERE SALES_DATE <= gold_signup_date) AS B) AS M
WHERE RANK3 =1


---WHAT IS THE TOTAL ORDER AND AMOUNT SPENT FOR EACH MEMBER BEFORE THEY BECAME A MEMBER?

SELECT SUM(PRICE) AS TOTAL_AMOUNT, S1.USER_ID, COUNT(P1.PRODUCT_ID) AS TOTAL_NO_ORDER FROM PRODUCT AS P1
INNER JOIN SALES AS S1
ON S1.PRODUCT_ID=P1.PRODUCT_ID
INNER JOIN gold_signup AS G1
ON S1.USER_ID =G1.USER_ID
WHERE SALES_DATE <= gold_signup_date
GROUP BY S1.USER_ID


--- IF BUYING EACH PRODUCTS GENERATE POINTS FOR EG 5RS= 2 ZOMATO POINTS AND EACH PRODUCT 
---HAS DIFFERENT PURCHASING POINTS FOR EG FOR P1 5RS=1 ZOMATO POINTS, FR P2 10RS=5 ZOMATO 
---POINT AND P3 5RS =1 ZOMATO POINT, CALCULATE PONTS COLLECTED BY EACH CUSTOMERS 
---AND FOR WHIHC PRODUCT MOST POINTS HAVE GIVEN TILL NO

SELECT B.*, TOTAL_AMOUNT / POINTS AS TOTAL_EARNED_POINTS FROM(
SELECT A.*, CASE 
WHEN PRODUCT_ID=1 THEN 5
WHEN PRODUCT_ID=2 THEN 2
WHEN PRODUCT_ID=3 THEN 5 
ELSE 0 
END
AS POINTS FROM(
SELECT USER_ID, SUM(PRICE) AS TOTAL_AMOUNT, P1.PRODUCT_ID FROM SALES AS S1
INNER JOIN PRODUCT AS P1
ON S1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY USER_ID,P1.PRODUCT_ID)A)B;


--FOR EACH OF THE CUSTOMER


SELECT USER_ID, SUM(TOTAL_EARNED_POINTS) *2.5 AS POINTS_MONEEY_EARNED FROM(       ---------5RS=2 ZOMATO, MEANS 2.5 RS = 1 ZOMATO POINTS
SELECT B.*, TOTAL_AMOUNT / POINTS AS TOTAL_EARNED_POINTS FROM(
SELECT A.*, CASE 
WHEN PRODUCT_ID=1 THEN 5
WHEN PRODUCT_ID=2 THEN 2
WHEN PRODUCT_ID=3 THEN 5 
ELSE 0 
END
AS POINTS FROM(
SELECT USER_ID, SUM(PRICE) AS TOTAL_AMOUNT, P1.PRODUCT_ID FROM SALES AS S1
INNER JOIN PRODUCT AS P1
ON S1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY USER_ID,P1.PRODUCT_ID)A)B)C
GROUP BY USER_ID;

---NOW FOR WHICH PRODUCT TOTAL POINTS GIVEN

SELECT * FROM(
SELECT *, RANK () OVER(ORDER BY PRODUCT_WISE_POINTS DESC) RANK4 FROM(
SELECT PRODUCT_ID, SUM(TOTAL_EARNED_POINTS) AS PRODUCT_WISE_POINTS FROM(       
SELECT B.*, TOTAL_AMOUNT / POINTS AS TOTAL_EARNED_POINTS FROM(
SELECT A.*, CASE 
WHEN PRODUCT_ID=1 THEN 5
WHEN PRODUCT_ID=2 THEN 2
WHEN PRODUCT_ID=3 THEN 5 
ELSE 0 
END
AS POINTS FROM(
SELECT USER_ID, SUM(PRICE) AS TOTAL_AMOUNT, P1.PRODUCT_ID FROM SALES AS S1
INNER JOIN PRODUCT AS P1
ON S1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY USER_ID,P1.PRODUCT_ID)A)B)C
GROUP BY PRODUCT_ID)D)E
WHERE RANK4=1;

-------------------------------------------------------------------------------------

---IN THE FIRST ONE YEAR AFTER A CUSTOMER JOINS THE PROGRAM (INCLUDING THEIR JOIN DATE) IRRESPECTVIE
---OF WHAT TE CUSTOMER HAS PURCHASED THEY EARN 5 ZOMATO POINTS FOR EVERY 10RS SPENT WHO EARNED 
---MORE 1 OR 3 AND WHAT WAS THEIR POINTS EARINGS IN THEIR FIRST YEAR?

SELECT A.USER_ID,(A.TOTAL/10) *5 AS ZOMATO_POINTS FROM(
SELECT S1.USER_ID, SUM(PRICE) AS TOTAL,  GOLD_SIGNUP_DATE
FROM PRODUCT AS P1
INNER JOIN SALES AS S1
ON S1.PRODUCT_ID=P1.PRODUCT_ID
INNER JOIN GOLD_SIGNUP AS G1
ON S1.USER_ID= G1.USER_ID
WHERE (SALES_DATE) BETWEEN GOLD_SIGNUP_DATE AND DATEADD(YEAR,1,GOLD_SIGNUP_DATE)
GROUP BY S1.USER_ID, GOLD_SIGNUP_DATE)AS A;

---------------
SELECT A.USER_ID, (A.TOTAL / 10) * 5 AS ZOMATO_POINTS
FROM (
    SELECT S1.USER_ID, SUM(PRICE) AS TOTAL, G1.GOLD_SIGNUP_DATE
    FROM PRODUCT AS P1
    INNER JOIN SALES AS S1
    ON S1.PRODUCT_ID = P1.PRODUCT_ID
    INNER JOIN GOLD_SIGNUP AS G1
    ON S1.USER_ID = G1.USER_ID
    WHERE S1.USER_ID IN (1, 3)
      AND SALES_DATE BETWEEN G1.GOLD_SIGNUP_DATE AND DATEADD(YEAR, 1, G1.GOLD_SIGNUP_DATE)
    GROUP BY S1.USER_ID, G1.GOLD_SIGNUP_DATE
) AS A;

------RANK ALL THE TRANSACTION OF HTE CUSTOMERS

SELECT *, RANK() OVER(PARTITION BY USER_ID ORDER BY SALES_DATE DESC) AS RANK5 FROM SALES;


------RANK ALL THE TRANSACTION FOR EACH MEMBER WENEVER THEY ARE A ZOMATO GOLD MEMBER FOR EVERY 
---NON GOLD MEMBER TRANSACTION MARK AS NA


SELECT E.*, CASE WHEN RANK5 =0 THEN 'NA' ELSE RANK5 END AS RANK6 FROM (
SELECT A.*, CAST((CASE WHEN GOLD_SIGNUP_DATE IS NULL THEN 0 ELSE RANK() OVER(PARTITION BY A.USER_ID ORDER BY SALES_DATE DESC) END ) AS varchar) AS RANK5 FROM (
SELECT S1.USER_ID, SALES_DATE ,PRODUCT_ID, GOLD_SIGNUP_DATE FROM SALES AS S1
LEFT JOIN GOLD_SIGNUP AS G1
ON S1.USER_ID=G1.USER_ID
AND SALES_DATE>=GOLD_SIGNUP_DATE)A)E;




